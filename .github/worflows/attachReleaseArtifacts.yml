name: "Attach Release Artifacts"

# Controls when the action will run. 
on:
  release:
    types: [published]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  attach-release-artifacts:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Get Branch
        shell: bash
        run: |
          releaseBranch=${{ github.event.release.target_commitish }}
          echo "Found branch ${releaseBranch}"
          echo "tagged_branch=${releaseBranch}" >> $GITHUB_ENV
        
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.0
          
      - name: Make metadata
        run: |
          python ${GITHUB_WORKSPACE}/makeMeta.py ${{ github.event.release.tag_name }}
          
      - name: Assemble release
        id: assemble-release
        run: |
          RELEASE_DIR="${RUNNER_TEMP}/release"
          echo "Release dir: ${RELEASE_DIR}"
          echo "Release zip: ${RELEASE_DIR}/ROTanks-${{ github.event.release.tag_name }}.zip"
          mkdir -v "${RELEASE_DIR}"
          echo "::set-output name=release-dir::${RELEASE_DIR}"
          cp -v -R "${GITHUB_WORKSPACE}/GameData" "${RELEASE_DIR}"
          cp -v "${GITHUB_WORKSPACE}/ROTanks.version" "${RELEASE_DIR}/GameData/ROTanks/ROTanks.version"
          cp -v "${GITHUB_WORKSPACE}/README.md" "${RELEASE_DIR}/README.md"
          cd ${RELEASE_DIR}
          zip -r ROTanks-${{ github.event.release.tag_name }}.zip GameData README.md
        
      - name: Upload package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.assemble-release.outputs.release-dir }}/ROTanks-${{ github.event.release.tag_name }}.zip
          asset_name: ROTanks-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
          
      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          
      - name: Commit new version file
        shell: bash
        env:
          TAG_STRING: ${{ github.event.release.tag_name }}
        run: |
          RELEASEBRANCH=${{ env.tagged_branch }}
          echo "Checking out branch ${RELEASEBRANCH}"
          git checkout $RELEASEBRANCH
          git reset --hard origin/$RELEASEBRANCH
          cp -v "${GITHUB_WORKSPACE}/ROTanks.version" "${GITHUB_WORKSPACE}/GameData/ROTanks/ROTanks.version"
          git add "${GITHUB_WORKSPACE}/GameData/ROTanks/ROTanks.version"
          git commit -m "Update version to $TAG_STRING"
          git push origin $RELEASEBRANCH
